// Package crds Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// auditor.kubeshield.to_dashboards.v1.yaml
// auditor.kubeshield.to_dashboards.yaml
// auditor.kubeshield.to_dashboardtemplates.v1.yaml
// auditor.kubeshield.to_dashboardtemplates.yaml
// auditor.kubeshield.to_datasources.v1.yaml
// auditor.kubeshield.to_datasources.yaml
package crds

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _auditorKubeshieldTo_dashboardsV1Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5f\xaf\xdb\xba\x0d\x7f\x3f\x9f\x82\xc0\x1e\xba\x01\x89\x0f\xba\x0d\xc3\x96\xb7\xa2\xdd\x1d\x82\xdd\xbb\x15\xed\x59\x5f\x86\x3d\xd0\x32\x1d\xeb\x1e\x59\xf2\x44\x2a\xa7\xd9\xb0\xef\x3e\x48\xb2\x1d\x27\xb1\x93\xf4\x5c\x54\x6f\xd6\x1f\x92\xfa\x91\xfc\x91\x32\x76\xfa\x0b\x79\xd6\xce\x6e\x00\x3b\x4d\x5f\x85\x6c\xfc\xe2\xe2\xf9\x8f\x5c\x68\xf7\xb8\x7f\xfb\xf0\xac\x6d\xb5\x81\xf7\x81\xc5\xb5\x9f\x88\x5d\xf0\x8a\x3e\x50\xad\xad\x16\xed\xec\x43\x4b\x82\x15\x0a\x6e\x1e\x00\x94\x27\x8c\x93\x4f\xba\x25\x16\x6c\xbb\x0d\xd8\x60\xcc\x03\x80\xc1\x92\x0c\xc7\x3d\x00\xd8\x75\xc5\x73\x28\xc9\x5b\x12\x4a\x5a\x2c\xb6\xb4\x01\x26\xf4\xaa\x31\x7a\xd7\xc8\x03\x40\x9e\xab\x90\x9b\xd2\xa1\xaf\xb8\xc0\x50\x69\x71\x3e\x1d\xe5\x46\x93\xa9\x0a\x71\x0f\xdc\x91\x8a\x62\x77\xde\x85\x6e\x03\xf3\x9b\xb2\xb4\x5e\xbd\x42\xa1\x9d\xf3\x7a\xf8\x5e\x0f\x87\xfa\xaf\xe3\xd1\x61\xb9\xeb\x58\xb9\x8a\xd2\x67\x46\xe3\xc3\x60\x56\x9a\x33\x9a\xe5\xaf\xa7\xf3\x3f\x6a\x96\xb4\xd6\x99\xe0\xd1\x4c\x2f\x92\xa6\x59\xdb\x5d\x30\xe8\x27\x0b\x0f\x00\xac\x5c\x47\x1b\xf8\x5b\x34\xb6\x43\x45\x71\x6e\x9f\xfd\x93\x8c\x5d\xf7\xa8\xec\xdf\xa2\xe9\x1a\x7c\x9b\x45\xa9\x86\x5a\xcc\x77\x01\x70\x1d\xd9\x77\x1f\xb7\x5f\x7e\xf7\xf9\x64\x1a\xa0\xf3\xae\x23\x2f\xe3\xb5\xf3\x98\x04\xc0\x64\x16\xa0\x22\x56\x5e\x77\x92\x22\xe3\x4d\x14\x98\x77\x41\x15\x3d\x4f\x0c\xd2\xd0\x60\x1a\x55\xbd\x0d\xe0\x6a\x90\x46\x33\x78\xea\x3c\x31\x59\x49\xd1\x70\x22\x18\xe2\x26\xb4\xe0\xca\x9f\x49\x49\x01\x9f\xc9\x47\x31\xc0\x8d\x0b\xa6\x02\xe5\xec\x9e\xbc\x80\x27\xe5\x76\x56\xff\x67\x94\xcd\x20\x2e\x29\x35\x28\xd4\x63\x7b\x1c\xda\x0a\x79\x8b\x06\xf6\x68\x02\xad\x00\x6d\x05\x2d\x1e\xc0\x53\xd4\x02\xc1\x4e\xe4\xa5\x2d\x5c\xc0\x4f\xce\x13\x68\x5b\xbb\x0d\x34\x22\x1d\x6f\x1e\x1f\x77\x5a\x86\xc0\x57\xae\x6d\x83\xd5\x72\x78\x54\xce\x8a\xd7\x65\x10\xe7\xf9\xb1\xa2\x3d\x99\x47\xd6\xbb\x75\x8c\x55\x2d\xa4\x24\x78\x7a\xc4\x4e\xaf\x93\xe9\x56\x52\xf6\xb4\xd5\xaf\x7c\x9f\x2a\xfc\xe6\xc4\x56\x39\x44\x0f\xb3\x78\x6d\x77\x93\x85\x14\x56\x57\x3c\x10\xc3\x0b\x34\x03\xf6\x47\xf3\x2d\x8e\x40\xc7\xa9\x88\xce\xa7\x3f\x7f\x7e\x82\x41\x75\x72\xc6\x39\xfa\x09\xf7\xe3\x41\x3e\xba\x20\x02\xa6\x6d\x4d\x3e\x3b\xb1\xf6\xae\x4d\x32\xc9\x56\x9d\xd3\x56\xd2\x87\x32\x9a\xec\x39\xfc\x1c\xca\x56\x4b\xf4\xfb\xbf\x03\xb1\x44\x5f\x15\xf0\x1e\xad\x75\x02\x25\x41\xe8\x2a\x14\xaa\x0a\xd8\x5a\x78\x8f\x2d\x99\xf7\xc8\xf4\xdd\x1d\x10\x91\xe6\x75\x04\xf6\x3e\x17\x4c\x89\xec\x7c\x73\x46\x6d\xb2\x30\xd0\xce\x71\xcc\xe7\x57\x1c\x3d\xbd\x9c\x4f\x5f\x3b\x02\x57\x52\xf3\xc6\x35\x86\x71\x19\x51\x77\x1e\x4c\x14\xf3\xed\x07\x17\x80\x8a\xa3\x76\xa6\x22\xbf\x9d\x31\xa7\x76\xbe\x45\xd9\xc4\xfc\xfd\xc3\xef\x17\x44\xc6\xdc\xde\x91\x3f\x5b\x6d\x5d\x45\xe6\x52\xe0\x15\x2b\x00\xbe\xae\x8f\x65\x67\x9d\xe2\xdf\xef\x69\x1d\xec\xb3\x75\x2f\x76\x5d\x47\xca\xe7\x0d\x88\x0f\x74\x9e\x34\x7b\xf2\x2f\x5e\xcb\x0c\x2e\x59\x61\xe9\x9c\x21\x3c\x65\xba\x98\x0c\xda\xd3\xd9\xad\xd7\x23\x1a\x67\xd3\xa3\x8e\xbb\xc2\x4f\x50\x02\xdf\x1b\x80\xca\xd9\x2a\x15\xeb\x99\x38\x3b\xa1\x99\x4f\x23\x2b\x4c\xa8\x16\x70\x8f\xda\x60\x69\x08\x5c\x19\x21\x4b\xa4\xce\x89\xc7\xcf\x0a\xe1\x99\xda\xe0\x3d\x59\x49\xc6\x52\x71\xb1\x41\x0b\xb5\xb3\x81\x7f\x3d\x2d\x62\x2f\xc1\xf2\xe4\xd1\xb2\x1e\x7a\x8d\xf9\x7d\x67\x97\xfb\x11\x59\x40\x74\x4b\x99\xc7\x06\x4c\x40\x46\x51\x54\x65\xd2\x73\x96\x7a\x84\x17\xe4\x42\x2c\x46\x68\x9d\x34\xe4\x0b\x78\x8a\x6c\xd9\xd7\xaf\x92\xe0\xa5\x21\x9b\x54\x04\x5b\x91\x37\x87\x48\xcd\x47\x6d\xaa\x41\xbb\x8b\x5c\x08\xdb\x7a\x59\x7a\x83\x12\xd9\x3e\xf2\x67\x0a\xce\x55\x14\x68\x21\xf0\xc0\xf3\xe9\x1e\xa3\xa6\x77\x1f\xb7\x50\x8f\x1d\xcb\xdc\xe8\xd5\xa6\x12\xa2\x14\x75\x12\xfd\x79\xe9\x93\x3c\x86\xac\x8c\xac\xbd\x8e\x9a\x16\xf6\xdd\x20\x92\x48\xa9\xcc\xb8\xbb\xcf\x3d\xef\xa0\x09\x2d\x5a\xf0\x84\x55\x0a\xb6\xfe\x30\x68\x5b\x69\x85\xa9\xc2\x55\x24\xa8\x0d\x03\x96\x2e\x5c\xa6\xf7\x11\x3d\x9a\x38\xb5\xf7\x4f\x82\x27\x95\xb8\x92\x80\xda\x4e\x0e\x4b\xb7\xbf\x79\xab\x9c\x05\x54\xfd\x85\x2c\xf9\x94\x0c\x77\x5d\x70\x5b\x03\x93\xac\xce\x3a\xa4\x9c\x69\xc5\x50\x7c\x8a\xdd\x28\xf4\x7a\x74\x9c\xc6\xf0\x0b\x72\x14\x0e\x25\x32\x55\x10\xba\x78\xed\x1f\x9c\x07\x6d\x59\xd0\x2a\x5a\x81\xae\xbf\x4d\x89\xe6\x21\x7f\xcd\x01\xde\xfe\x76\x05\x65\xc8\x4a\x8b\x9c\x19\xc5\xa8\xfc\x9f\x5f\xff\x55\x5c\x42\x72\x4d\xf0\x9f\x56\x67\xe6\x6b\x06\x17\x24\x32\x4a\x0c\x39\x78\xd1\xd2\xc4\x26\xa6\x8b\x9d\x4a\xdf\xf6\xf5\xc6\x2c\x8a\x4d\x24\x93\x1b\x50\x1a\xaf\x7d\x2b\xc0\xe7\xcb\x4e\x8f\xf2\x95\xe2\x93\x87\x27\xe4\x3b\x7d\xff\xd4\x50\xbf\x3d\xea\x3e\xbd\xfd\x1b\x4e\x8c\x36\x09\xd9\x65\xec\x4e\xfa\xa7\x28\x34\x62\xa4\x6b\xad\x12\x05\xc4\xe8\x56\x8d\x73\x9c\xa8\x21\x92\x13\x38\x9f\x48\x64\xa6\x11\x9c\xa0\x91\x52\x23\x3a\xdc\x59\xd6\x15\x79\xaa\x00\x61\x17\xd0\xa3\x15\xa2\x2a\xca\xbe\xc8\xa2\xdc\xda\x2d\xca\xfc\x65\x19\x36\x57\xde\x16\x90\xfd\x9c\xb6\x0e\x8e\x1f\x41\x5d\x25\x12\x77\x35\x3c\xf9\xf8\x1e\xf8\x01\x0d\xd3\x0a\xfe\x91\x4b\xfd\xab\xed\x4a\x1b\xee\xf2\xf7\xa1\x4b\xda\x27\x21\x3e\x71\x1d\xa4\xcc\x84\xda\xb9\x82\xbe\x62\xdb\x19\x2a\x94\x6b\x1f\x8f\xae\x5d\x84\xf5\x27\xb4\x07\x38\xa6\x5e\x11\x0d\xea\x1f\x34\x80\x9e\xb2\x07\x59\x62\xd5\x45\xe5\x1d\xf3\xf8\x16\x58\x76\xbf\xd1\xcf\x04\xef\x86\x1a\x9f\x13\xbd\x24\x85\x81\x09\xd0\x97\x5a\x3c\xfa\xc3\xa4\x87\x00\x85\x36\x75\xf5\x4c\x75\x30\x8b\x62\x7f\xcd\x44\x50\x58\x57\xd1\x05\x63\xf0\x6f\x32\x01\x60\xa9\x8d\x96\x43\x4c\xf1\x8a\x94\xb3\xb5\xd1\x2a\xd6\xbd\xe5\xf8\x6f\x3b\xe7\x05\xad\xbc\xd2\x83\xf3\x2d\x59\x1e\xeb\x99\xbe\x62\x76\x5b\x5f\x97\x66\xd7\x72\x8e\xcf\x2e\x2d\x36\x14\xeb\x64\xf5\xcc\xc2\xd5\x5e\x36\x2f\xa2\xf7\x78\x38\x5b\x1b\x7f\x28\xdc\x68\xf6\xc6\xd6\x6d\xa8\xb0\xfd\xab\xbe\x7f\xad\x1d\xe5\x44\x52\xc6\x58\x59\xbe\xf1\x01\xa3\x17\xde\x1f\xb7\xd9\xf7\x16\xf7\x3a\xbf\xdb\x7e\xf8\x5e\xc2\xd9\x84\xdd\xab\x1e\x4e\x61\xe9\xc2\xb7\xce\xf9\x99\x87\xcc\x1d\xe7\xf6\xd7\x5e\x87\xbf\x14\x87\x2b\xc1\x77\x4f\xff\x73\x12\x69\x7f\xbf\x38\x10\xab\x4d\x8c\xb5\xd6\x71\xfa\xd7\x13\x09\xeb\xd8\x94\x8c\x1a\x66\xec\xce\xe5\x53\x1f\x89\xad\x80\xad\x80\x72\x3e\xf6\x0b\xce\x56\xe3\x7f\xa2\x61\xfd\x0d\x4f\x24\xaf\x66\x24\xbe\x34\x5a\x35\xd1\xa0\x21\xf0\x9d\x85\x36\xe4\x5f\x57\x50\x1e\xc6\x06\x3b\xff\x26\xb9\x64\x9e\xd7\xbf\x61\xbb\x06\x79\xa6\x9e\x9c\x60\xf7\x31\xee\x39\xcb\xd0\xdc\xeb\x24\x14\xbe\x60\x30\x02\xca\x04\x16\xf2\xf0\x73\x68\x3b\x06\x3d\x53\xe0\xae\x84\xd2\x52\x1b\x73\xb3\x81\xe9\x9f\x77\xe9\x16\xf7\x2b\x9c\x0d\xac\x8b\xc9\xec\xff\xc9\x63\x9c\xc5\xf9\xf8\x94\x98\xcc\x84\x72\x2c\x6e\x83\xf5\x7d\xe3\x00\xff\xfd\xdf\xc3\xff\x03\x00\x00\xff\xff\xc5\xf3\x15\x9c\xdb\x16\x00\x00")

func auditorKubeshieldTo_dashboardsV1YamlBytes() ([]byte, error) {
	return bindataRead(
		_auditorKubeshieldTo_dashboardsV1Yaml,
		"auditor.kubeshield.to_dashboards.v1.yaml",
	)
}

func auditorKubeshieldTo_dashboardsV1Yaml() (*asset, error) {
	bytes, err := auditorKubeshieldTo_dashboardsV1YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auditor.kubeshield.to_dashboards.v1.yaml", size: 5851, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _auditorKubeshieldTo_dashboardsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5f\x8f\xdb\xb8\x11\x7f\xdf\x4f\x31\x40\x0b\xe4\xae\xb0\xb5\xdd\x5e\x71\xe8\xf9\xa5\x08\x92\xa6\x58\x34\xd7\x06\xc9\x36\x2f\x8b\x14\x18\x49\x63\x8b\xb7\x12\xa9\x72\x86\xde\x75\x8a\x7e\xf7\x62\x48\x49\x96\x6d\xc9\xde\x6c\x5b\x3e\xd9\x43\x72\xfe\xcf\x6f\x86\xc2\xd6\x7c\x26\xcf\xc6\xd9\x15\x60\x6b\xe8\x49\xc8\xea\x3f\xce\x1e\xfe\xc0\x99\x71\xd7\xdb\x9b\x9c\x04\x6f\xae\x1e\x8c\x2d\x57\xf0\x26\xb0\xb8\xe6\x23\xb1\x0b\xbe\xa0\xb7\xb4\x36\xd6\x88\x71\xf6\xaa\x21\xc1\x12\x05\x57\x57\x00\x85\x27\x54\xe2\x9d\x69\x88\x05\x9b\x76\x05\x36\xd4\xf5\x15\x40\x8d\x39\xd5\xac\x67\x00\xb0\x6d\xb3\x87\x90\x93\xb7\x24\x14\x45\x59\x6c\x68\x05\x4c\xe8\x8b\xaa\x36\x9b\x4a\xae\x00\x12\xad\x44\xae\x72\x87\xbe\xe4\x0c\x43\x69\xc4\xf9\x78\x95\x2b\x43\x75\x99\x89\xbb\xe2\x96\x0a\x65\xbb\xf1\x2e\xb4\x2b\x98\x3e\x94\xb8\x75\xe2\x0b\x14\xda\x38\x6f\xfa\xff\xcb\xfe\x52\xf7\x6f\x7f\xb5\xdf\x6e\x5b\x2e\x5c\x49\xf1\x6f\xf2\xc6\xdb\x5e\xad\x48\xab\x0d\xcb\x5f\x0e\xe9\xef\x0d\x4b\xdc\x6b\xeb\xe0\xb1\x1e\x1b\x12\xc9\x6c\xec\x26\xd4\xe8\x47\x1b\x57\x00\xad\x27\x26\xbf\xa5\xbf\xdb\x07\xeb\x1e\xed\x3b\x55\x82\x57\xb0\xc6\x9a\x55\x3a\x17\xae\xa5\x15\xfc\x55\x6d\x69\xb1\x20\xbd\xc2\x21\xf7\x5d\x50\x3a\x7b\x58\x50\x02\xaf\xe0\x5f\xff\xbe\x02\xd8\x62\x6d\xca\x18\x93\xb4\xe9\x5a\xb2\xaf\x3f\xdc\x7e\xfe\xe1\x53\x51\x51\x83\x89\xa8\x82\x5d\x4b\x5e\x06\x9f\xa4\x30\x0d\x09\x32\xd0\x00\x4a\xe2\xc2\x9b\x36\x72\x84\x57\xca\x2a\x9d\x81\x52\x53\x82\x18\xa4\x22\xd8\x26\x1a\x95\xc0\x51\x0c\xb8\x35\x48\x65\x18\x3c\x45\x13\xad\x44\x95\x46\x6c\x41\x8f\xa0\x05\x97\xff\x42\x85\x64\xf0\x49\xdd\xe0\x19\xb8\x72\xa1\x2e\xa1\x70\x76\x4b\x5e\xc0\x53\xe1\x36\xd6\x7c\x1d\x38\x33\x88\x8b\x22\x6b\x14\xea\x5c\xde\x2f\x63\x85\xbc\xc5\x5a\x9d\x10\x68\x01\x68\x4b\x68\x70\x07\x9e\x54\x06\x04\x3b\xe2\x16\x8f\x70\x06\x3f\x3b\x4f\x60\xec\xda\xad\xa0\x12\x69\x79\x75\x7d\xbd\x31\xd2\x97\x44\xe1\x9a\x26\x58\x23\xbb\xeb\xc2\x59\xf1\x26\x0f\xe2\x3c\x5f\x97\xb4\xa5\xfa\x9a\xcd\x66\xa9\x09\x6c\x84\x0a\x09\x9e\xae\xb1\x35\xcb\xa8\xb8\x95\x58\x57\x4d\xf9\xab\x21\x54\xaf\x46\x9a\xca\x4e\xa3\xca\xe2\x8d\xdd\x0c\xe4\x98\x67\xb3\x7e\xd7\x6c\x03\xc3\x80\xdd\xb5\xa4\xff\xde\xbd\x4a\x52\xaf\x7c\xfc\xd3\xa7\x3b\xe8\x85\xc6\x10\x1c\xfa\x3c\x7a\x7b\x7f\x8d\xf7\x8e\x57\x47\x19\xbb\x26\x9f\x02\xb7\xf6\xae\x89\x1c\xc9\x96\xad\x33\x56\xe2\x9f\xa2\x36\x64\x0f\x9d\xce\x21\x6f\x8c\x68\xa4\xff\x19\x88\x45\xe3\x93\xc1\x1b\xb4\xd6\x09\xe4\x04\xa1\x2d\x51\xa8\xcc\xe0\xd6\xc2\x1b\x6c\xa8\x7e\x83\x4c\xff\x77\xb7\xab\x87\x79\xa9\x2e\xbd\xec\xf8\x31\x9e\xf5\x6b\xaa\x3c\x74\x45\x8c\x3a\xa0\x00\x34\xf8\xf4\x9e\xec\x46\xaa\x15\xfc\xf8\xc3\xd1\x5e\x8b\xa2\x29\xb9\x82\x7f\xdc\xe3\xf2\xeb\x97\xef\xee\x97\xb8\xfc\xfa\xdb\xe5\x4f\x5f\x7e\x73\xdf\xfd\xf8\xfe\x8f\xbf\x3e\xba\x33\xa9\x64\x4f\x4e\x01\x1c\xc8\x3d\x18\x5e\xd2\xbb\x03\xbc\x63\xd5\xe7\x8e\xc3\x2c\x1a\x5c\x50\x32\xad\xe3\x54\x7e\xd6\xa5\x29\xd7\x5e\xb8\x34\xe9\x12\x5d\x6b\x57\x97\xe4\x6f\x4f\x94\x58\x3b\xdf\xa0\xac\x14\x28\x7e\xfc\xfd\x24\x33\x85\x90\x0d\xf9\x83\xbd\xc6\x95\x54\x1f\xb3\x9a\x95\x0d\xf0\xb4\xdc\x37\xbb\x65\x8f\xf0\xcb\x90\x20\x7e\xb9\xee\x30\x5e\x7c\xa0\xc3\xda\xdc\x92\x7f\xf4\x46\x4e\xbc\x90\x44\xe5\xce\xd5\x84\x63\x08\xd5\x8a\x33\x9e\x0e\xac\x5c\x0e\xb6\x1f\x10\x07\xde\x17\x13\x2a\xf5\x92\x67\xa4\x54\xe1\x6c\x19\x07\x82\x93\xdc\x39\x40\xae\x8f\x03\xd4\x8c\x50\x1b\x70\x8b\xa6\xc6\xbc\x26\x70\xb9\xba\x27\x76\x07\x8e\x2d\xe1\xa8\xd5\x1e\x88\x0c\xde\x93\x95\xa8\x24\x65\x47\xdb\x46\xa8\x99\x48\xe3\x73\x29\xae\x53\x0a\xcb\x9d\x47\xcb\xa6\x9f\x62\xa6\x4e\x1d\x99\xf4\x1e\x59\x40\x4c\x43\x09\x12\x7b\x3f\x80\x0c\x8c\xa8\x4c\xf8\xe9\x2c\x75\x1e\x9d\xe4\x0a\xda\xcb\xd0\x3a\xa9\xc8\x67\x70\xa7\xb0\xdb\xb5\xbf\x9c\xe0\xb1\x22\x1b\x05\x04\x5b\x92\xaf\x77\x8a\xf0\x7b\x59\x45\x85\x76\xa3\xb0\x0a\xb7\xeb\x39\xde\x15\x8a\xb6\x0c\x05\xe2\x98\x7a\x0b\x65\x67\x21\x70\xdf\x2c\xa2\x0d\x83\x9c\xd7\x1f\x6e\x21\x26\x67\xcf\x7c\x86\xaf\x76\xa1\xa2\xa0\x56\x34\x7e\xc7\x51\x48\xab\xaf\x33\x85\xfe\xa5\x4a\x99\x3c\x75\x16\x0e\x14\x97\x99\x71\xf3\x9c\x80\xbc\x86\x2a\x34\x68\xc1\x13\x96\x31\xa9\xba\xab\x60\x6c\x69\x0a\x8c\xcd\xb1\x24\x41\x53\x33\x60\xee\xc2\x71\xc1\xee\x3d\x46\xa3\x20\x76\x11\x49\x2e\xd1\xee\x98\x13\x50\xd3\xca\x6e\xda\xe6\x0b\xd6\xa4\x3c\xa7\xf2\xcf\x64\xc9\x8f\xe6\xb3\xb3\x86\xdd\xae\x81\x49\x16\x47\xa3\x54\xaa\xa4\xac\xef\x5b\xd9\x66\x60\x79\x2e\x13\x0e\x73\xf5\x11\x59\x59\x43\x8e\x4c\x25\x84\x56\xcd\x7d\xe7\x3c\x18\xcb\x82\xb6\xa0\x05\x98\xf5\xb7\x88\x30\xdc\x57\x67\xbd\x83\x9b\xdf\x2d\x20\x0f\x49\x64\x96\xf2\x3f\x1b\x44\xdf\x3f\x7d\xc9\x4e\x9d\x31\xcf\xf6\xa7\xc5\x91\xea\x86\xc1\x05\x51\xac\xd0\xf4\x82\x47\x23\x95\x4e\x3c\xad\x0e\x36\xdd\x6c\xd8\xa9\x32\xc3\x34\xc2\x47\x9a\x50\x69\x30\xf8\x7c\x22\x4f\x35\x8c\xce\xb7\xb3\x6d\x23\x2d\x4f\xc8\xcf\x8a\xf5\x5d\x45\xdd\x61\x95\x7a\x68\xf3\x2b\x8e\x48\x35\x4a\x4e\x30\x73\x2e\x1b\x0d\x59\xca\x52\xfd\x62\xd6\xa6\x88\xe5\xad\x59\x5c\x54\xce\x71\x2c\x7b\x85\x1d\x70\x3e\x02\x84\x0c\xa9\x7e\x26\xc0\xce\xb2\x29\xc9\x53\x09\x08\x9b\x80\x1e\xad\x10\x95\xca\xf9\xa4\x56\xba\xe9\xef\xe5\xf5\x72\xda\x88\x66\xfc\xf6\x29\x1e\xec\xc3\x39\xb8\x6c\x11\xc1\xd7\xad\xe1\xce\xeb\x53\xe0\x9d\xbe\xa8\x16\xd0\xbd\xb3\x5e\xa4\x51\xdc\x7e\x46\x1c\x77\x6d\x94\x3b\x4a\xd8\xd1\xe4\x0b\xb1\xc6\x60\xed\x5c\x46\x4f\xd8\xb4\x35\x65\x85\x6b\xae\xf7\x41\x9b\x71\xff\xcf\x68\x77\xb0\x2f\xa2\x4c\x95\xe9\xde\x30\x80\x9e\x52\x6c\x58\xb4\x3b\x62\xe1\x1d\xf3\xf0\x08\x98\x6b\x3d\xb5\x79\x20\x78\xdd\xf7\xe1\x54\xb0\x39\x15\x18\x98\x00\x7d\x6e\xc4\xa3\xdf\x8d\xba\x3c\x14\x68\xe3\x40\xcf\xb4\x0e\xf5\x0c\xd3\xef\x98\x08\x32\xeb\x4a\x3a\xa9\x7b\xfe\x3e\x15\x32\xe6\xa6\x36\xb2\xd3\x52\x2d\xa9\x70\x76\x5d\x9b\x42\xfb\xd4\x5c\xde\x35\xad\xf3\x82\x56\x5e\x10\xb3\xa9\x01\x29\xad\xe5\x44\xe7\x9f\x38\xd4\xf5\x91\x89\x9d\x54\xa9\x13\x1b\x33\xed\x7e\x19\x35\x3d\x21\x9f\x99\x22\xd3\x16\x7a\x8f\xbb\x83\x9d\xe1\xf3\xc1\xd9\xb1\x6b\x18\xa2\xfa\x1e\xd8\x3d\xd4\xbb\xe7\xd8\x9e\x8b\x82\x28\x6a\x17\xf8\x86\xa7\x81\x99\x9c\xee\x2f\x61\xe5\x79\xa4\x74\x7e\x73\xfb\xf6\x7f\xcf\x96\xeb\xb0\xf9\xe6\xa7\x48\x98\x36\xf0\xfc\x1d\x7f\xf2\x44\xb8\x78\x67\x3b\xff\xbe\xfa\x6f\xac\x9e\x4d\xaa\xcb\x33\xc8\x41\x0e\xfd\xed\xe4\xb8\x76\x01\xcd\xa2\xc6\x71\xfc\x34\xa3\x70\xb3\x1f\x0d\x06\xfe\x27\xfa\xa6\x86\x66\xf6\xa0\x94\xc1\xad\x40\xe1\xbc\xf6\x6d\x67\xcb\xe1\xa3\x4e\xbf\xff\x8a\x47\x7c\x17\xf0\x58\x99\xa2\x3a\x4d\x43\x1e\xd2\xd9\x59\x68\x42\xfa\xc6\x04\xf9\x6e\x18\x67\xd3\xb7\x8d\x63\xe4\x78\xd9\x2b\xb0\xad\x90\x4f\xf0\xff\xc0\x5f\x1f\xf4\xc4\x51\xbd\xa5\x59\x23\xda\xfe\x19\x43\x2d\x50\xd4\x81\x85\x3c\xfc\x12\x9a\x96\xc1\x9c\xb4\xa2\xd9\x84\x99\x1e\x24\x2e\x8e\x10\xdd\x93\x29\x6a\xff\xe2\x0f\x0d\x47\xa4\x3e\x6f\x61\x7b\x83\x75\x5b\xe1\xcd\x9e\x16\xd1\x62\xd9\x7d\xcb\x1d\x6d\x03\xa4\xd4\x18\xbd\x7b\x59\x9c\xd7\xf9\x3e\x51\xfe\x13\x00\x00\xff\xff\x63\x37\x56\xcd\x9e\x16\x00\x00")

func auditorKubeshieldTo_dashboardsYamlBytes() ([]byte, error) {
	return bindataRead(
		_auditorKubeshieldTo_dashboardsYaml,
		"auditor.kubeshield.to_dashboards.yaml",
	)
}

func auditorKubeshieldTo_dashboardsYaml() (*asset, error) {
	bytes, err := auditorKubeshieldTo_dashboardsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auditor.kubeshield.to_dashboards.yaml", size: 5790, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _auditorKubeshieldTo_dashboardtemplatesV1Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x4d\x8f\x23\x35\x10\xbd\xe7\x57\x94\xc4\x61\x2f\x24\xd1\x0a\x84\x50\xdf\xd0\x2c\x87\x11\x20\xa1\x9d\xd1\xde\x2b\xed\x4a\x77\x31\x6e\xdb\x54\x95\x03\xb3\x88\xff\x8e\xec\x4e\x4f\x3e\x70\x66\x57\x88\xed\x9b\xeb\xf3\xf9\xbd\x2a\x37\x26\xfe\x40\xa2\x1c\x43\x07\x98\x98\xfe\x34\x0a\xe5\xa4\x9b\xa7\xef\x75\xc3\x71\x7b\x78\xbb\x7a\xe2\xe0\x3a\xb8\xcb\x6a\x71\x7a\x4f\x1a\xb3\xf4\xf4\x8e\xf6\x1c\xd8\x38\x86\xd5\x44\x86\x0e\x0d\xbb\x15\x40\x2f\x84\xc5\xf8\xc8\x13\xa9\xe1\x94\x3a\x08\xd9\xfb\x15\x80\xc7\x1d\x79\x2d\x31\x00\x98\xd2\xe6\x29\xef\x48\x02\x19\xd5\x2e\x01\x27\xea\x40\x09\xa5\x1f\x3d\x0f\xa3\xad\x00\x66\x9b\x43\x1d\x77\x11\xc5\x19\x4d\xc9\x63\x89\xc7\xec\xd8\xa2\xd4\x12\x3a\x32\x79\xb7\xb1\xb8\xd2\x44\x7d\x29\x3f\x48\xcc\xa9\x83\x76\xd0\x5c\xf5\x08\xa3\x47\xa3\x21\x0a\x2f\xe7\xf5\x92\x74\x3c\x9d\x52\x17\x77\x4a\xda\x47\x47\xf5\x38\xb3\xf2\x6e\x81\xf7\x78\x84\x57\x7d\x9e\xd5\x7e\x6a\xfb\x7f\x66\xb5\x1a\x93\x7c\x16\xf4\xad\x0b\x56\xb7\x72\x18\xb2\x47\x69\x04\xac\x00\xb4\x8f\x89\x3a\xb8\xf3\x59\x8d\x0a\xde\xc3\x2c\x62\xbd\xc9\xfa\x48\xdd\xe1\x2d\xfa\x34\xe2\xdb\xb9\x5e\x3f\xd2\x84\xf3\x45\x01\x62\xa2\xf0\xc3\xaf\xf7\x1f\xbe\x79\xb8\x30\x03\x24\x89\x89\xc4\x5e\x38\x99\xbf\xb3\x29\x39\xb3\x02\x38\xd2\x5e\x38\x59\x1d\x9f\x37\xa5\xe0\x1c\x05\xae\x8c\x07\x29\xd8\x48\x0b\x34\x72\x47\x0c\x10\xf7\x60\x23\x2b\x08\x25\x21\xa5\x60\x75\x64\x2e\x0a\x43\x09\xc2\x00\x71\xf7\x1b\xf5\xb6\x81\x07\x92\x52\x06\x74\x8c\xd9\x3b\xe8\x63\x38\x90\x18\x08\xf5\x71\x08\xfc\xf1\xa5\xb6\x82\xc5\xda\xb4\x12\x69\x57\x35\x39\x18\x49\x40\x0f\x07\xf4\x99\xbe\x06\x0c\x0e\x26\x7c\x06\xa1\xd2\x05\x72\x38\xab\x57\x43\x74\x03\xbf\x44\x21\xe0\xb0\x8f\x1d\x8c\x66\x49\xbb\xed\x76\x60\x5b\xb6\xa3\x8f\xd3\x94\x03\xdb\xf3\xb6\x8f\xc1\x84\x77\xd9\xa2\xe8\xd6\xd1\x81\xfc\x56\x79\x58\x97\x81\x66\xa3\xde\xb2\xd0\x16\x13\xaf\x2b\xf4\x60\x75\xc5\x26\xf7\x95\x1c\xf7\x49\xdf\x5c\x60\xb5\xe7\x22\xaf\x9a\x70\x18\xce\x1c\x75\xe6\x5e\x51\xa0\xcc\x1c\xb0\x02\x1e\x53\xe7\x5b\x9c\x88\x2e\xa6\xc2\xce\xfb\x1f\x1f\x1e\x61\x69\x5d\xc5\xb8\x66\xbf\xf2\x7e\x4a\xd4\x93\x04\x85\x30\x0e\x7b\x92\x59\xc4\xbd\xc4\xa9\xd6\xa4\xe0\x52\xe4\x60\xf5\xd0\x7b\xa6\x70\x4d\xbf\xe6\xdd\xc4\x56\x74\xff\x3d\x93\x5a\xd1\x6a\x03\x77\x18\x42\x34\xd8\x11\xe4\xe4\xd0\xc8\x6d\xe0\x3e\xc0\x1d\x4e\xe4\xef\x50\xe9\x8b\x0b\x50\x98\xd6\x75\x21\xf6\xf3\x24\x38\x7f\xed\xae\x83\x67\xd6\xce\x1c\xcb\x9b\x74\xfa\xda\xfb\x55\x95\xbc\x5e\xf3\xeb\x80\xd7\x92\xeb\x74\xbb\x96\x15\x60\x1f\x65\x42\xeb\xca\xf4\x7f\xf7\x6d\x33\x62\x46\x5f\xb6\x63\x20\x69\x44\xcc\xbb\xd5\x7c\x01\xfe\xbf\x26\x86\x43\xf3\x5a\x00\x6c\x34\xdd\x70\xdd\x94\xe9\x3a\x00\x45\xf0\xb9\xd5\x95\x27\xfa\x18\x43\x83\xec\xcf\x28\x6e\x6c\xfe\xbf\x65\xe6\x5b\x62\x7d\x22\xef\xf0\x25\x35\x28\x7b\xc9\x42\x0d\x64\x6b\x60\xd7\x30\x5e\xcc\x45\xc3\x5f\x24\x6d\x99\x8f\x9c\x37\x5d\xe6\x5b\xf6\xdc\xec\x7f\xb8\xd1\xf9\xc6\x36\x42\xe5\xc8\x3b\x92\xfb\xc6\x1d\x5f\x67\xef\x35\xe6\xe2\x81\xe4\x0f\xe1\xd6\xc6\xce\x69\xbb\x18\x3d\xe1\x25\xce\x36\xd9\xeb\xe6\xdf\xfe\xdc\xbf\x5c\xe0\xca\xfc\x82\xe1\xd3\xcf\xd2\xbf\x8c\x5a\x5e\x76\xd7\x81\x49\x9e\xd3\xd5\xa2\xe0\x40\xe7\x96\xbc\x7b\xf9\x53\x2d\x88\xd5\xd0\xb2\x76\xf0\xd7\xdf\xab\x7f\x02\x00\x00\xff\xff\xd1\xc4\xe3\xd0\x46\x0a\x00\x00")

func auditorKubeshieldTo_dashboardtemplatesV1YamlBytes() ([]byte, error) {
	return bindataRead(
		_auditorKubeshieldTo_dashboardtemplatesV1Yaml,
		"auditor.kubeshield.to_dashboardtemplates.v1.yaml",
	)
}

func auditorKubeshieldTo_dashboardtemplatesV1Yaml() (*asset, error) {
	bytes, err := auditorKubeshieldTo_dashboardtemplatesV1YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auditor.kubeshield.to_dashboardtemplates.v1.yaml", size: 2630, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _auditorKubeshieldTo_dashboardtemplatesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x8f\x23\x35\x10\xbd\xe7\x57\x94\xc4\x61\x2f\x24\xd1\x08\x84\x50\xdf\x50\x16\xa4\x15\x20\xa1\x9d\x61\xef\x95\x76\xa5\x53\x8c\xdb\x36\x55\xe5\x2c\xb3\x88\xff\x8e\xec\xee\xce\xc7\x74\xcf\xac\x90\xd8\xdc\xfc\x5e\x7d\xf9\x55\x95\xd3\x98\xf8\x03\x89\x72\x0c\x0d\x60\x62\xfa\xcb\x28\x94\x93\x6e\x1e\xbf\xd7\x0d\xc7\xed\xe9\x6e\x4f\x86\x77\xab\x47\x0e\xae\x81\x5d\x56\x8b\xfd\x7b\xd2\x98\xa5\xa5\xb7\x74\xe0\xc0\xc6\x31\xac\x7a\x32\x74\x68\xd8\xac\x00\x5a\x21\x2c\xe0\x03\xf7\xa4\x86\x7d\x6a\x20\x64\xef\x57\x00\x1e\xf7\xe4\xb5\xd8\x00\x60\x4a\x9b\xc7\xbc\x27\x09\x64\x54\x53\x05\xec\xa9\x01\x25\x94\xf6\xe8\xb9\x3b\xda\x0a\x60\xc0\x1c\xea\x71\x1f\x51\x9c\x51\x9f\x3c\x16\x7b\xcc\x8e\x2d\x4a\x0d\xa1\x47\x26\xef\x36\x16\x57\x9a\xa8\x2d\xe1\x3b\x89\x39\x35\xb0\x6c\x34\x44\x1d\xcb\x68\xd1\xa8\x8b\xc2\xd3\x79\x3d\x39\x8d\xa7\x8b\xeb\x44\xa7\xa4\x6d\x74\x54\x8f\x83\x2a\x6f\xa7\xf2\x1e\xc6\xf2\x2a\xe7\x59\xed\xe7\x65\xfe\x17\x56\xab\x36\xc9\x67\x41\xbf\x74\xc1\x4a\x2b\x87\x2e\x7b\x94\x05\x83\x15\x40\x12\x52\x92\x13\xfd\x1e\x1e\x43\xfc\x18\x7e\x2a\x45\x6a\x03\x07\xf4\x5a\x68\x6d\x63\xa2\x06\x76\x3e\xab\x51\xb9\x8e\xe6\xbd\x8c\x9d\x1b\x2f\xab\x86\x96\xb5\x81\xbf\xff\x59\x01\x9c\xd0\xb3\xab\x8d\x1b\xc8\x98\x28\xfc\xf0\xdb\xbb\x0f\xdf\xdc\xb7\x47\xea\x71\x00\x4b\xd6\x98\x48\xec\x2c\xd8\xd0\xcb\xf3\x14\x9d\x31\x00\x47\xda\x0a\xa7\x1a\x11\xde\x94\x50\x83\x0d\xb8\x32\x37\xa4\x60\x47\x82\xd3\x80\x91\x03\xad\x69\x20\x1e\xc0\x8e\xac\x20\x54\xef\x17\xac\x96\x74\x15\x16\x8a\x09\x06\x88\xfb\x3f\xa8\xb5\x0d\xdc\x17\x0d\x44\x41\x8f\x31\x7b\x07\x6d\x0c\x27\x12\x03\xa1\x36\x76\x81\x3f\x9d\x23\x2b\x58\xac\x29\xab\xbe\x76\x13\x91\x83\x91\x04\xf4\x45\x84\x4c\x5f\x03\x06\x07\x3d\x3e\x81\x50\xc9\x01\x39\x5c\x45\xab\x26\xba\x81\x5f\xa3\x10\x70\x38\xc4\x06\x8e\x66\x49\x9b\xed\xb6\x63\x9b\xf6\xa6\x8d\x7d\x9f\x03\xdb\xd3\xb6\x8d\xc1\x84\xf7\xd9\xa2\xe8\xd6\xd1\x89\xfc\x56\xb9\x5b\x97\x29\x67\xa3\xd6\xb2\xd0\x16\x13\xaf\x6b\xe1\xc1\xea\xf2\xf5\xee\xab\x73\xab\xde\x5c\x55\x6a\x4f\xa5\xa5\x6a\xc2\xa1\x3b\xc3\x75\x08\x5f\xd4\xbd\x8c\x20\xb0\x02\x8e\x6e\x43\xfd\x17\x79\x0b\x54\x54\x79\xff\xe3\xfd\x03\x4c\x49\x6b\x0b\x6e\x35\xaf\x6a\x5f\xdc\xf4\x22\x7c\x11\x8a\xc3\x81\x64\x68\xdc\x41\x62\x5f\x23\x52\x70\x29\x72\xb0\x7a\x68\x3d\x53\xb8\x15\x5d\xf3\xbe\x67\x2b\x9d\xfe\x33\x93\x5a\xe9\xcf\x06\x76\x18\x42\x34\xd8\x13\xe4\xe4\xd0\xc8\x6d\xe0\x5d\x80\x1d\xf6\xe4\x77\xa8\xf4\xc5\x65\x2f\x0a\xeb\xba\x48\xfa\x79\xe1\xaf\x1f\xbd\x5b\xc3\x41\xad\x33\x3c\x3d\x4b\xd3\x6f\x69\x87\x6a\xe7\x9e\x6f\xf9\x2d\xfd\xb2\x63\x9d\x61\x37\xc7\x00\x0e\x51\x7a\xb4\xa6\x4c\xf8\x77\xdf\x2e\xf0\x43\xbd\x65\xfe\x3b\x92\x19\x3f\x6c\xce\xc2\x6e\xff\x3f\xe1\x0d\xbb\x85\x8b\x00\xb0\x51\xbf\x48\xbc\xd0\x88\xe7\x34\x8a\xe0\xd3\x3c\x1b\xf7\xf4\x29\x86\x99\xa8\x9f\x0d\x6b\x6c\xfe\xbf\x7b\xe5\xe5\x86\xbc\xea\x73\xfa\x32\x4a\x97\x0d\x63\xa1\x59\x3d\x6b\x60\x37\x83\x6e\x7a\x3e\x63\x4b\xcb\xe6\xe0\xa8\xec\x02\x61\x7e\x8e\xe6\x85\xac\xa7\xc5\x7c\x8b\xdb\x34\xa8\xe1\x1d\xc9\xbb\xd9\x8d\x5e\x53\xe9\x65\x85\xe2\x89\xe4\xa3\xf0\x7c\xdf\x06\x97\x7d\x8c\x9e\xf0\xba\xb6\x25\x41\xd7\x8b\x7f\xd2\x17\x76\x2a\xf9\x06\x3c\x67\x7e\xfd\x09\x79\x06\x4d\x63\x02\xa7\x3b\xf4\xe9\x88\x77\x17\xac\xae\xcd\x7a\xfc\x6e\xba\xa2\x01\xea\xb7\x82\x6b\xc0\x24\xd3\xf8\xef\x1f\x05\x3b\x1a\x91\x7f\x03\x00\x00\xff\xff\xc4\xe6\x0d\x35\x0a\x0a\x00\x00")

func auditorKubeshieldTo_dashboardtemplatesYamlBytes() ([]byte, error) {
	return bindataRead(
		_auditorKubeshieldTo_dashboardtemplatesYaml,
		"auditor.kubeshield.to_dashboardtemplates.yaml",
	)
}

func auditorKubeshieldTo_dashboardtemplatesYaml() (*asset, error) {
	bytes, err := auditorKubeshieldTo_dashboardtemplatesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auditor.kubeshield.to_dashboardtemplates.yaml", size: 2570, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _auditorKubeshieldTo_datasourcesV1Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4d\x8f\xe3\x36\x0c\xbd\xe7\x57\x10\xe8\x61\x2e\x1b\x07\x83\x16\x45\xe1\xdb\x62\xb6\x28\x06\xfd\x5a\xec\x2c\xf6\xae\x48\x8c\xad\x8e\x2c\xaa\x24\x95\x76\x5a\xf4\xbf\x17\x92\xec\xc4\x49\x06\xdd\x5e\xd6\x37\x91\xd4\x23\xfd\xde\xa3\x4c\xf2\x9f\x90\xc5\x53\xec\xc1\x24\x8f\x7f\x2a\xc6\x72\x92\xee\xf9\x3b\xe9\x3c\xed\x8e\xf7\x9b\x67\x1f\x5d\x0f\x0f\x59\x94\xa6\x0f\x28\x94\xd9\xe2\x3b\x3c\xf8\xe8\xd5\x53\xdc\x4c\xa8\xc6\x19\x35\xfd\x06\xc0\x32\x9a\x12\xfc\xe8\x27\x14\x35\x53\xea\x21\xe6\x10\x36\x00\xc1\xec\x31\x48\xa9\x01\x30\x29\x75\xcf\x79\x8f\x1c\x51\xb1\x76\x89\x66\xc2\x1e\x04\x0d\xdb\x31\xf8\x61\xd4\x0d\x40\x8b\x15\xe4\xd6\x52\x3a\x93\x9d\x57\xe2\x7a\x57\x46\x8f\xc1\x75\x4a\x1b\x49\x68\x0b\xee\xc0\x94\x53\x0f\xaf\x17\x35\xb8\xb9\xbf\x35\x8a\x03\xb1\x5f\xce\xdb\xe5\xd2\x7c\x3a\x5f\x5d\xd2\x29\x89\x25\x87\xf5\xd8\xe8\x78\x77\x9a\xab\x06\x83\x17\xfd\xf1\x2a\xf1\x93\x17\xad\xc9\x14\x32\x9b\x70\xf1\x2f\x35\x2e\x3e\x0e\x39\x18\x5e\x67\x36\x00\x62\x29\x61\x0f\xbf\x94\x81\x93\xb1\x58\xa6\x38\x36\x91\xea\xc0\xdb\x99\x9a\xe3\xbd\x09\x69\x34\xf7\x0d\xcb\x8e\x38\x99\xf6\x3f\x00\x94\x30\xbe\x7d\xff\xf8\xe9\xeb\xa7\x8b\x30\x40\x62\x4a\xc8\x7a\xfa\xf5\xf6\xad\x5c\xb0\x8a\x02\x38\x14\xcb\x3e\x69\xb5\xc7\x5d\x01\x6c\x55\xe0\x8a\xfc\x28\xa0\x23\x2e\xa3\xa1\x9b\x67\x00\x3a\x80\x8e\x5e\x80\x31\x31\x0a\x46\xad\x96\xb8\x00\x86\x52\x64\x22\xd0\xfe\x37\xb4\xda\xc1\x13\x72\x81\x01\x19\x29\x07\x07\x96\xe2\x11\x59\x81\xd1\xd2\x10\xfd\x5f\x27\x6c\x01\xa5\xda\x34\x18\xc5\x99\xdd\xf3\xe7\xa3\x22\x47\x13\xe0\x68\x42\xc6\x37\x60\xa2\x83\xc9\xbc\x00\x63\xe9\x02\x39\xae\xf0\x6a\x89\x74\xf0\x33\x31\x82\x8f\x07\xea\x61\x54\x4d\xd2\xef\x76\x83\xd7\xc5\xfd\x96\xa6\x29\x47\xaf\x2f\x3b\x4b\x51\xd9\xef\xb3\x12\xcb\xce\xe1\x11\xc3\x4e\xfc\xb0\x2d\x86\xf5\x8a\x56\x33\xe3\xce\x24\xbf\xad\xa3\x47\xad\x2b\x34\xb9\xaf\x78\xde\x17\xb9\xbb\x98\x55\x5f\x8a\xc2\xa2\xec\xe3\xb0\x4a\x54\x6b\xfd\x87\x02\xc5\x61\xe0\x05\xcc\x7c\xb5\xfd\xc5\x99\xe8\x12\x2a\xec\x7c\xf8\xfe\xe9\x23\x2c\xad\xab\x18\xd7\xec\x57\xde\xcf\x17\xe5\x2c\x41\x21\xcc\xc7\x03\x72\x13\xf1\xc0\x34\x55\x4c\x8c\x2e\x91\x8f\x5a\x0f\x36\x78\x8c\xd7\xf4\x4b\xde\x4f\x5e\x8b\xee\xbf\x67\x14\x2d\x5a\x75\xf0\x60\x62\x24\x85\x3d\x42\x4e\xce\x28\xba\x0e\x1e\x23\x3c\x98\x09\xc3\x83\x11\xfc\xe2\x02\x14\xa6\x65\x5b\x88\xfd\x7f\x12\xac\x5f\xb3\xeb\xe2\xc6\xda\x2a\xb1\x3c\x3d\x9f\x2f\x54\xa3\x59\x2e\x4b\x5f\x5f\xc5\xa6\x8e\x14\x31\xdc\x0f\x18\x91\xeb\xf2\x5c\x57\x5c\x19\xe3\xd7\x9b\x0b\xc5\x25\x45\xa8\x89\xa4\xae\x11\x46\x85\xe1\x9c\x5d\x3a\xdc\xc0\x02\x1c\x88\x97\xf5\x6d\xfe\xe9\xe0\x51\xc1\x12\x33\x4a\xa2\xe8\x4e\x2b\xb8\xe4\xef\x64\x85\xfc\xe6\x15\xc4\x3f\x46\x6f\xc7\x32\xd0\xec\x00\xa0\x08\x53\x6e\xaf\x02\xec\x5f\x2a\xd8\xdb\xf7\x8f\xb3\x03\xbb\x1b\x84\x03\xf1\x64\xb4\x2f\xeb\xfd\xed\x37\x37\xd9\xc6\x78\x59\xfd\x01\xf9\xf3\x5a\xdc\x04\x1b\x11\x3d\x28\xe7\xf6\x94\x8b\x12\x9b\x01\xd7\x91\xbc\x3f\xed\xf1\xa2\xc4\xac\x28\xfc\xfd\xcf\xe6\xdf\x00\x00\x00\xff\xff\xea\xd7\xe2\xf5\x44\x07\x00\x00")

func auditorKubeshieldTo_datasourcesV1YamlBytes() ([]byte, error) {
	return bindataRead(
		_auditorKubeshieldTo_datasourcesV1Yaml,
		"auditor.kubeshield.to_datasources.v1.yaml",
	)
}

func auditorKubeshieldTo_datasourcesV1Yaml() (*asset, error) {
	bytes, err := auditorKubeshieldTo_datasourcesV1YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auditor.kubeshield.to_datasources.v1.yaml", size: 1860, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _auditorKubeshieldTo_datasourcesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x4d\x6f\x1c\x37\x0c\xbd\xef\xaf\x20\xd0\x83\x2f\xd9\x59\x18\x2d\x8a\x62\x6e\x81\xd3\x16\x46\xbf\x82\x38\xcd\x9d\xab\xe1\xce\xb0\xd6\x50\xaa\x48\x6d\xea\x16\xfd\xef\x85\xa4\x99\xdd\xb5\x9d\xb8\xa7\xec\x4d\x8f\xd4\x23\xf5\x1e\x39\x8b\x91\x3f\x50\x52\x0e\xd2\x03\x46\xa6\xbf\x8c\xa4\x9c\xb4\xbb\xff\x4e\x3b\x0e\xbb\xe3\xf5\x9e\x0c\xaf\x37\xf7\x2c\x43\x0f\x37\x59\x2d\xcc\xef\x48\x43\x4e\x8e\xde\xd0\x81\x85\x8d\x83\x6c\x66\x32\x1c\xd0\xb0\xdf\x00\xb8\x44\x58\xc0\xf7\x3c\x93\x1a\xce\xb1\x07\xc9\xde\x6f\x00\x3c\xee\xc9\x6b\xc9\x01\xc0\x18\xbb\xfb\xbc\xa7\x24\x64\x54\x4b\x09\xce\xd4\x83\x12\x26\x37\x79\x1e\x27\xdb\x00\x34\xac\x30\xb7\x92\xda\x61\x1e\xd8\x42\xaa\x77\x75\x62\xf2\x43\x67\x61\xa3\x91\x5c\xe1\x1d\x53\xc8\xb1\x87\x4f\x27\x35\xba\xa5\xbe\x43\xa3\x31\x24\x5e\xcf\xdb\xf5\xd2\x72\x3a\x5f\x5d\xc3\x31\xaa\x0b\x03\xd5\x63\x93\xe3\xcd\xa9\xaf\x0a\x7a\x56\xfb\xe9\x49\xe0\x67\x56\xab\xc1\xe8\x73\x42\xff\xe8\x2d\x15\x57\x96\x31\x7b\x4c\x97\x91\x0d\x40\x4c\xa4\x94\x8e\xf4\xbb\xdc\x4b\xf8\x28\x3f\x94\x46\xb4\x87\x03\x7a\x2d\x61\x75\x21\x52\x0f\xbf\x96\xf7\x44\x74\x54\x9a\xd4\xbc\x4f\x8b\x33\xcb\x9b\xd4\xd0\xb2\xf6\xf0\xcf\xbf\x1b\x80\x23\x7a\x1e\xaa\x31\x2d\x18\x22\xc9\xeb\xb7\xb7\x1f\xbe\xbe\x73\x13\xcd\xd8\xc0\x52\x38\x44\x4a\x76\xd2\xa5\x79\x75\x9a\x92\x13\x06\x30\x90\xba\xc4\xb1\x32\xc2\x55\xa1\x6a\x39\x30\x94\xb9\x20\x05\x9b\x08\x8e\x0d\xa3\x01\xb4\x96\x81\x70\x00\x9b\x58\x21\x51\x7d\xa2\x58\x6d\xe9\x82\x16\x4a\x0a\x0a\x84\xfd\x1f\xe4\xac\x83\xbb\x22\x43\x52\xd0\x29\x64\x3f\x80\x0b\x72\xa4\x64\x90\xc8\x85\x51\xf8\xef\x13\xb3\x82\x85\x5a\xd2\xa3\xd1\x22\xfa\xfa\x63\x31\x4a\x82\xbe\x88\x90\xe9\x15\xa0\x0c\x30\xe3\x03\x24\x2a\x35\x20\xcb\x05\x5b\x4d\xd1\x0e\x7e\x09\x89\x80\xe5\x10\x7a\x98\xcc\xa2\xf6\xbb\xdd\xc8\xb6\xee\x85\x0b\xf3\x9c\x85\xed\x61\xe7\x82\x58\xe2\x7d\xb6\x90\x74\x37\xd0\x91\xfc\x4e\x79\xdc\x96\x29\x66\x23\x67\x39\xd1\x0e\x23\x6f\x6b\xe3\x62\x75\xb9\xe6\xe1\xab\x93\x55\x57\x17\x9d\xda\x43\x71\x55\x2d\xb1\x8c\x27\xb8\xce\xda\x67\x75\x2f\x03\x07\xac\x80\xcb\xb5\xd6\xff\x59\xde\x02\x15\x55\xde\x7d\x7f\xf7\x1e\xd6\xa2\xd5\x82\xc7\x9a\x57\xb5\xcf\xd7\xf4\x2c\x7c\x11\x8a\xe5\x40\xa9\x19\x77\x48\x61\xae\x8c\x24\x43\x0c\x2c\x56\x0f\xce\x33\xc9\x63\xd1\x35\xef\x67\xb6\xe2\xf4\x9f\x99\xd4\x8a\x3f\x1d\xdc\xa0\x48\x30\xd8\x13\xe4\x38\xa0\xd1\xd0\xc1\xad\xc0\x0d\xce\xe4\x6f\x50\xe9\x8b\xcb\x5e\x14\xd6\x6d\x91\xf4\xff\x85\xbf\xfc\xa8\x3d\x4e\x6c\x6a\x9d\xe0\xf5\xeb\xf3\x72\x52\x5b\xc6\x8b\xb4\x4f\xad\x5a\xf3\xa2\xae\xfe\xf0\x23\x09\xa5\x8b\x8d\xfd\xcc\x08\xfc\xf6\x2c\xbd\xcc\x43\x31\x65\x0e\x5a\x17\x85\xc4\x60\x3c\x47\x57\xfe\x27\xa4\x00\x87\x90\xd6\xe5\x6c\x73\xd2\xc1\xad\x81\x0b\x29\x91\xc6\x20\xc3\x69\xc5\xd6\xf8\x95\x5e\xf0\xbe\x82\x8f\x13\xbb\xe9\x19\x2b\xeb\xea\x35\x04\x81\x39\xb7\x8d\x87\xfd\x43\xa5\x7a\xfd\xf6\x76\x99\xb4\x6e\xf3\xac\x9b\x19\xad\x2f\xcb\xfb\xed\x37\x4f\x62\x4d\xe1\xb2\xd6\x23\xa5\x97\x95\x7f\x02\x1d\xd7\xbf\xbb\xe3\x35\xfa\x38\xe1\xf5\x19\xab\x36\x6c\x97\xff\x9c\x8b\x30\x40\xd3\xab\x07\x4b\x99\x96\x2f\x6b\x48\x38\xd2\x82\xfc\x17\x00\x00\xff\xff\xea\x8a\x1c\x8e\x46\x07\x00\x00")

func auditorKubeshieldTo_datasourcesYamlBytes() ([]byte, error) {
	return bindataRead(
		_auditorKubeshieldTo_datasourcesYaml,
		"auditor.kubeshield.to_datasources.yaml",
	)
}

func auditorKubeshieldTo_datasourcesYaml() (*asset, error) {
	bytes, err := auditorKubeshieldTo_datasourcesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "auditor.kubeshield.to_datasources.yaml", size: 1862, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"auditor.kubeshield.to_dashboards.v1.yaml":         auditorKubeshieldTo_dashboardsV1Yaml,
	"auditor.kubeshield.to_dashboards.yaml":            auditorKubeshieldTo_dashboardsYaml,
	"auditor.kubeshield.to_dashboardtemplates.v1.yaml": auditorKubeshieldTo_dashboardtemplatesV1Yaml,
	"auditor.kubeshield.to_dashboardtemplates.yaml":    auditorKubeshieldTo_dashboardtemplatesYaml,
	"auditor.kubeshield.to_datasources.v1.yaml":        auditorKubeshieldTo_datasourcesV1Yaml,
	"auditor.kubeshield.to_datasources.yaml":           auditorKubeshieldTo_datasourcesYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"auditor.kubeshield.to_dashboards.v1.yaml":         {auditorKubeshieldTo_dashboardsV1Yaml, map[string]*bintree{}},
	"auditor.kubeshield.to_dashboards.yaml":            {auditorKubeshieldTo_dashboardsYaml, map[string]*bintree{}},
	"auditor.kubeshield.to_dashboardtemplates.v1.yaml": {auditorKubeshieldTo_dashboardtemplatesV1Yaml, map[string]*bintree{}},
	"auditor.kubeshield.to_dashboardtemplates.yaml":    {auditorKubeshieldTo_dashboardtemplatesYaml, map[string]*bintree{}},
	"auditor.kubeshield.to_datasources.v1.yaml":        {auditorKubeshieldTo_datasourcesV1Yaml, map[string]*bintree{}},
	"auditor.kubeshield.to_datasources.yaml":           {auditorKubeshieldTo_datasourcesYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
